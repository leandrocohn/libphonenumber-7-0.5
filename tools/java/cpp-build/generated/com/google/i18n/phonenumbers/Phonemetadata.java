// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phonemetadata.proto

package com.google.i18n.phonenumbers;

public final class Phonemetadata {
  private Phonemetadata() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface NumberFormatOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string pattern = 1;
    boolean hasPattern();
    String getPattern();
    
    // required string format = 2;
    boolean hasFormat();
    String getFormat();
    
    // repeated string leading_digits_pattern = 3;
    java.util.List<String> getLeadingDigitsPatternList();
    int getLeadingDigitsPatternCount();
    String getLeadingDigitsPattern(int index);
    
    // optional string national_prefix_formatting_rule = 4;
    boolean hasNationalPrefixFormattingRule();
    String getNationalPrefixFormattingRule();
    
    // optional bool national_prefix_optional_when_formatting = 6;
    boolean hasNationalPrefixOptionalWhenFormatting();
    boolean getNationalPrefixOptionalWhenFormatting();
    
    // optional string domestic_carrier_code_formatting_rule = 5;
    boolean hasDomesticCarrierCodeFormattingRule();
    String getDomesticCarrierCodeFormattingRule();
  }
  public static final class NumberFormat extends
      com.google.protobuf.GeneratedMessageLite
      implements NumberFormatOrBuilder {
    // Use NumberFormat.newBuilder() to construct.
    private NumberFormat(Builder builder) {
      super(builder);
    }
    private NumberFormat(boolean noInit) {}
    
    private static final NumberFormat defaultInstance;
    public static NumberFormat getDefaultInstance() {
      return defaultInstance;
    }
    
    public NumberFormat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string pattern = 1;
    public static final int PATTERN_FIELD_NUMBER = 1;
    private java.lang.Object pattern_;
    public boolean hasPattern() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPattern() {
      java.lang.Object ref = pattern_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          pattern_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPatternBytes() {
      java.lang.Object ref = pattern_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        pattern_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string format = 2;
    public static final int FORMAT_FIELD_NUMBER = 2;
    private java.lang.Object format_;
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getFormat() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          format_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFormatBytes() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        format_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated string leading_digits_pattern = 3;
    public static final int LEADING_DIGITS_PATTERN_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList leadingDigitsPattern_;
    public java.util.List<String>
        getLeadingDigitsPatternList() {
      return leadingDigitsPattern_;
    }
    public int getLeadingDigitsPatternCount() {
      return leadingDigitsPattern_.size();
    }
    public String getLeadingDigitsPattern(int index) {
      return leadingDigitsPattern_.get(index);
    }
    
    // optional string national_prefix_formatting_rule = 4;
    public static final int NATIONAL_PREFIX_FORMATTING_RULE_FIELD_NUMBER = 4;
    private java.lang.Object nationalPrefixFormattingRule_;
    public boolean hasNationalPrefixFormattingRule() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getNationalPrefixFormattingRule() {
      java.lang.Object ref = nationalPrefixFormattingRule_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nationalPrefixFormattingRule_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNationalPrefixFormattingRuleBytes() {
      java.lang.Object ref = nationalPrefixFormattingRule_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nationalPrefixFormattingRule_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool national_prefix_optional_when_formatting = 6;
    public static final int NATIONAL_PREFIX_OPTIONAL_WHEN_FORMATTING_FIELD_NUMBER = 6;
    private boolean nationalPrefixOptionalWhenFormatting_;
    public boolean hasNationalPrefixOptionalWhenFormatting() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getNationalPrefixOptionalWhenFormatting() {
      return nationalPrefixOptionalWhenFormatting_;
    }
    
    // optional string domestic_carrier_code_formatting_rule = 5;
    public static final int DOMESTIC_CARRIER_CODE_FORMATTING_RULE_FIELD_NUMBER = 5;
    private java.lang.Object domesticCarrierCodeFormattingRule_;
    public boolean hasDomesticCarrierCodeFormattingRule() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getDomesticCarrierCodeFormattingRule() {
      java.lang.Object ref = domesticCarrierCodeFormattingRule_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          domesticCarrierCodeFormattingRule_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDomesticCarrierCodeFormattingRuleBytes() {
      java.lang.Object ref = domesticCarrierCodeFormattingRule_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        domesticCarrierCodeFormattingRule_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      pattern_ = "";
      format_ = "";
      leadingDigitsPattern_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      nationalPrefixFormattingRule_ = "";
      nationalPrefixOptionalWhenFormatting_ = false;
      domesticCarrierCodeFormattingRule_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPattern()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFormat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPatternBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFormatBytes());
      }
      for (int i = 0; i < leadingDigitsPattern_.size(); i++) {
        output.writeBytes(3, leadingDigitsPattern_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, getNationalPrefixFormattingRuleBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getDomesticCarrierCodeFormattingRuleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(6, nationalPrefixOptionalWhenFormatting_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPatternBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFormatBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < leadingDigitsPattern_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(leadingDigitsPattern_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getLeadingDigitsPatternList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNationalPrefixFormattingRuleBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getDomesticCarrierCodeFormattingRuleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, nationalPrefixOptionalWhenFormatting_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.NumberFormat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.i18n.phonenumbers.Phonemetadata.NumberFormat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.i18n.phonenumbers.Phonemetadata.NumberFormat, Builder>
        implements com.google.i18n.phonenumbers.Phonemetadata.NumberFormatOrBuilder {
      // Construct using com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        pattern_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        format_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        leadingDigitsPattern_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        nationalPrefixFormattingRule_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        nationalPrefixOptionalWhenFormatting_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        domesticCarrierCodeFormattingRule_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.NumberFormat getDefaultInstanceForType() {
        return com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.getDefaultInstance();
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.NumberFormat build() {
        com.google.i18n.phonenumbers.Phonemetadata.NumberFormat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.i18n.phonenumbers.Phonemetadata.NumberFormat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.i18n.phonenumbers.Phonemetadata.NumberFormat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.NumberFormat buildPartial() {
        com.google.i18n.phonenumbers.Phonemetadata.NumberFormat result = new com.google.i18n.phonenumbers.Phonemetadata.NumberFormat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pattern_ = pattern_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.format_ = format_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          leadingDigitsPattern_ = new com.google.protobuf.UnmodifiableLazyStringList(
              leadingDigitsPattern_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.leadingDigitsPattern_ = leadingDigitsPattern_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nationalPrefixFormattingRule_ = nationalPrefixFormattingRule_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nationalPrefixOptionalWhenFormatting_ = nationalPrefixOptionalWhenFormatting_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.domesticCarrierCodeFormattingRule_ = domesticCarrierCodeFormattingRule_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.google.i18n.phonenumbers.Phonemetadata.NumberFormat other) {
        if (other == com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.getDefaultInstance()) return this;
        if (other.hasPattern()) {
          setPattern(other.getPattern());
        }
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (!other.leadingDigitsPattern_.isEmpty()) {
          if (leadingDigitsPattern_.isEmpty()) {
            leadingDigitsPattern_ = other.leadingDigitsPattern_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLeadingDigitsPatternIsMutable();
            leadingDigitsPattern_.addAll(other.leadingDigitsPattern_);
          }
          
        }
        if (other.hasNationalPrefixFormattingRule()) {
          setNationalPrefixFormattingRule(other.getNationalPrefixFormattingRule());
        }
        if (other.hasNationalPrefixOptionalWhenFormatting()) {
          setNationalPrefixOptionalWhenFormatting(other.getNationalPrefixOptionalWhenFormatting());
        }
        if (other.hasDomesticCarrierCodeFormattingRule()) {
          setDomesticCarrierCodeFormattingRule(other.getDomesticCarrierCodeFormattingRule());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPattern()) {
          
          return false;
        }
        if (!hasFormat()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              pattern_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              format_ = input.readBytes();
              break;
            }
            case 26: {
              ensureLeadingDigitsPatternIsMutable();
              leadingDigitsPattern_.add(input.readBytes());
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              nationalPrefixFormattingRule_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000020;
              domesticCarrierCodeFormattingRule_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              nationalPrefixOptionalWhenFormatting_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string pattern = 1;
      private java.lang.Object pattern_ = "";
      public boolean hasPattern() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPattern() {
        java.lang.Object ref = pattern_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          pattern_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPattern(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pattern_ = value;
        
        return this;
      }
      public Builder clearPattern() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pattern_ = getDefaultInstance().getPattern();
        
        return this;
      }
      void setPattern(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        pattern_ = value;
        
      }
      
      // required string format = 2;
      private java.lang.Object format_ = "";
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getFormat() {
        java.lang.Object ref = format_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          format_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFormat(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        format_ = value;
        
        return this;
      }
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        format_ = getDefaultInstance().getFormat();
        
        return this;
      }
      void setFormat(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        format_ = value;
        
      }
      
      // repeated string leading_digits_pattern = 3;
      private com.google.protobuf.LazyStringList leadingDigitsPattern_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureLeadingDigitsPatternIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          leadingDigitsPattern_ = new com.google.protobuf.LazyStringArrayList(leadingDigitsPattern_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<String>
          getLeadingDigitsPatternList() {
        return java.util.Collections.unmodifiableList(leadingDigitsPattern_);
      }
      public int getLeadingDigitsPatternCount() {
        return leadingDigitsPattern_.size();
      }
      public String getLeadingDigitsPattern(int index) {
        return leadingDigitsPattern_.get(index);
      }
      public Builder setLeadingDigitsPattern(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLeadingDigitsPatternIsMutable();
        leadingDigitsPattern_.set(index, value);
        
        return this;
      }
      public Builder addLeadingDigitsPattern(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLeadingDigitsPatternIsMutable();
        leadingDigitsPattern_.add(value);
        
        return this;
      }
      public Builder addAllLeadingDigitsPattern(
          java.lang.Iterable<String> values) {
        ensureLeadingDigitsPatternIsMutable();
        super.addAll(values, leadingDigitsPattern_);
        
        return this;
      }
      public Builder clearLeadingDigitsPattern() {
        leadingDigitsPattern_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      void addLeadingDigitsPattern(com.google.protobuf.ByteString value) {
        ensureLeadingDigitsPatternIsMutable();
        leadingDigitsPattern_.add(value);
        
      }
      
      // optional string national_prefix_formatting_rule = 4;
      private java.lang.Object nationalPrefixFormattingRule_ = "";
      public boolean hasNationalPrefixFormattingRule() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getNationalPrefixFormattingRule() {
        java.lang.Object ref = nationalPrefixFormattingRule_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nationalPrefixFormattingRule_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNationalPrefixFormattingRule(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nationalPrefixFormattingRule_ = value;
        
        return this;
      }
      public Builder clearNationalPrefixFormattingRule() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nationalPrefixFormattingRule_ = getDefaultInstance().getNationalPrefixFormattingRule();
        
        return this;
      }
      void setNationalPrefixFormattingRule(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        nationalPrefixFormattingRule_ = value;
        
      }
      
      // optional bool national_prefix_optional_when_formatting = 6;
      private boolean nationalPrefixOptionalWhenFormatting_ ;
      public boolean hasNationalPrefixOptionalWhenFormatting() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getNationalPrefixOptionalWhenFormatting() {
        return nationalPrefixOptionalWhenFormatting_;
      }
      public Builder setNationalPrefixOptionalWhenFormatting(boolean value) {
        bitField0_ |= 0x00000010;
        nationalPrefixOptionalWhenFormatting_ = value;
        
        return this;
      }
      public Builder clearNationalPrefixOptionalWhenFormatting() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nationalPrefixOptionalWhenFormatting_ = false;
        
        return this;
      }
      
      // optional string domestic_carrier_code_formatting_rule = 5;
      private java.lang.Object domesticCarrierCodeFormattingRule_ = "";
      public boolean hasDomesticCarrierCodeFormattingRule() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getDomesticCarrierCodeFormattingRule() {
        java.lang.Object ref = domesticCarrierCodeFormattingRule_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          domesticCarrierCodeFormattingRule_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDomesticCarrierCodeFormattingRule(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        domesticCarrierCodeFormattingRule_ = value;
        
        return this;
      }
      public Builder clearDomesticCarrierCodeFormattingRule() {
        bitField0_ = (bitField0_ & ~0x00000020);
        domesticCarrierCodeFormattingRule_ = getDefaultInstance().getDomesticCarrierCodeFormattingRule();
        
        return this;
      }
      void setDomesticCarrierCodeFormattingRule(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        domesticCarrierCodeFormattingRule_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:i18n.phonenumbers.NumberFormat)
    }
    
    static {
      defaultInstance = new NumberFormat(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:i18n.phonenumbers.NumberFormat)
  }
  
  public interface PhoneNumberDescOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional string national_number_pattern = 2;
    boolean hasNationalNumberPattern();
    String getNationalNumberPattern();
    
    // optional string possible_number_pattern = 3;
    boolean hasPossibleNumberPattern();
    String getPossibleNumberPattern();
    
    // optional string example_number = 6;
    boolean hasExampleNumber();
    String getExampleNumber();
  }
  public static final class PhoneNumberDesc extends
      com.google.protobuf.GeneratedMessageLite
      implements PhoneNumberDescOrBuilder {
    // Use PhoneNumberDesc.newBuilder() to construct.
    private PhoneNumberDesc(Builder builder) {
      super(builder);
    }
    private PhoneNumberDesc(boolean noInit) {}
    
    private static final PhoneNumberDesc defaultInstance;
    public static PhoneNumberDesc getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhoneNumberDesc getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional string national_number_pattern = 2;
    public static final int NATIONAL_NUMBER_PATTERN_FIELD_NUMBER = 2;
    private java.lang.Object nationalNumberPattern_;
    public boolean hasNationalNumberPattern() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getNationalNumberPattern() {
      java.lang.Object ref = nationalNumberPattern_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nationalNumberPattern_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNationalNumberPatternBytes() {
      java.lang.Object ref = nationalNumberPattern_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nationalNumberPattern_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string possible_number_pattern = 3;
    public static final int POSSIBLE_NUMBER_PATTERN_FIELD_NUMBER = 3;
    private java.lang.Object possibleNumberPattern_;
    public boolean hasPossibleNumberPattern() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getPossibleNumberPattern() {
      java.lang.Object ref = possibleNumberPattern_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          possibleNumberPattern_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPossibleNumberPatternBytes() {
      java.lang.Object ref = possibleNumberPattern_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        possibleNumberPattern_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string example_number = 6;
    public static final int EXAMPLE_NUMBER_FIELD_NUMBER = 6;
    private java.lang.Object exampleNumber_;
    public boolean hasExampleNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getExampleNumber() {
      java.lang.Object ref = exampleNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          exampleNumber_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getExampleNumberBytes() {
      java.lang.Object ref = exampleNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        exampleNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      nationalNumberPattern_ = "";
      possibleNumberPattern_ = "";
      exampleNumber_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getNationalNumberPatternBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getPossibleNumberPatternBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(6, getExampleNumberBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNationalNumberPatternBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPossibleNumberPatternBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getExampleNumberBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc, Builder>
        implements com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDescOrBuilder {
      // Construct using com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        nationalNumberPattern_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        possibleNumberPattern_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        exampleNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getDefaultInstanceForType() {
        return com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc build() {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc buildPartial() {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc result = new com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nationalNumberPattern_ = nationalNumberPattern_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.possibleNumberPattern_ = possibleNumberPattern_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.exampleNumber_ = exampleNumber_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc other) {
        if (other == com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) return this;
        if (other.hasNationalNumberPattern()) {
          setNationalNumberPattern(other.getNationalNumberPattern());
        }
        if (other.hasPossibleNumberPattern()) {
          setPossibleNumberPattern(other.getPossibleNumberPattern());
        }
        if (other.hasExampleNumber()) {
          setExampleNumber(other.getExampleNumber());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              nationalNumberPattern_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              possibleNumberPattern_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000004;
              exampleNumber_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string national_number_pattern = 2;
      private java.lang.Object nationalNumberPattern_ = "";
      public boolean hasNationalNumberPattern() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getNationalNumberPattern() {
        java.lang.Object ref = nationalNumberPattern_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nationalNumberPattern_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNationalNumberPattern(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nationalNumberPattern_ = value;
        
        return this;
      }
      public Builder clearNationalNumberPattern() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nationalNumberPattern_ = getDefaultInstance().getNationalNumberPattern();
        
        return this;
      }
      void setNationalNumberPattern(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        nationalNumberPattern_ = value;
        
      }
      
      // optional string possible_number_pattern = 3;
      private java.lang.Object possibleNumberPattern_ = "";
      public boolean hasPossibleNumberPattern() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getPossibleNumberPattern() {
        java.lang.Object ref = possibleNumberPattern_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          possibleNumberPattern_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPossibleNumberPattern(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        possibleNumberPattern_ = value;
        
        return this;
      }
      public Builder clearPossibleNumberPattern() {
        bitField0_ = (bitField0_ & ~0x00000002);
        possibleNumberPattern_ = getDefaultInstance().getPossibleNumberPattern();
        
        return this;
      }
      void setPossibleNumberPattern(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        possibleNumberPattern_ = value;
        
      }
      
      // optional string example_number = 6;
      private java.lang.Object exampleNumber_ = "";
      public boolean hasExampleNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getExampleNumber() {
        java.lang.Object ref = exampleNumber_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          exampleNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setExampleNumber(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        exampleNumber_ = value;
        
        return this;
      }
      public Builder clearExampleNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        exampleNumber_ = getDefaultInstance().getExampleNumber();
        
        return this;
      }
      void setExampleNumber(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        exampleNumber_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:i18n.phonenumbers.PhoneNumberDesc)
    }
    
    static {
      defaultInstance = new PhoneNumberDesc(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:i18n.phonenumbers.PhoneNumberDesc)
  }
  
  public interface PhoneMetadataOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional .i18n.phonenumbers.PhoneNumberDesc general_desc = 1;
    boolean hasGeneralDesc();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getGeneralDesc();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc fixed_line = 2;
    boolean hasFixedLine();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getFixedLine();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc mobile = 3;
    boolean hasMobile();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getMobile();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc toll_free = 4;
    boolean hasTollFree();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getTollFree();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc premium_rate = 5;
    boolean hasPremiumRate();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPremiumRate();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc shared_cost = 6;
    boolean hasSharedCost();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getSharedCost();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc personal_number = 7;
    boolean hasPersonalNumber();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPersonalNumber();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc voip = 8;
    boolean hasVoip();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getVoip();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc pager = 21;
    boolean hasPager();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPager();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc uan = 25;
    boolean hasUan();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getUan();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc emergency = 27;
    boolean hasEmergency();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getEmergency();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc voicemail = 28;
    boolean hasVoicemail();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getVoicemail();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc short_code = 29;
    boolean hasShortCode();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getShortCode();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc standard_rate = 30;
    boolean hasStandardRate();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getStandardRate();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc carrier_specific = 31;
    boolean hasCarrierSpecific();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getCarrierSpecific();
    
    // optional .i18n.phonenumbers.PhoneNumberDesc no_international_dialling = 24;
    boolean hasNoInternationalDialling();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getNoInternationalDialling();
    
    // required string id = 9;
    boolean hasId();
    String getId();
    
    // optional int32 country_code = 10;
    boolean hasCountryCode();
    int getCountryCode();
    
    // optional string international_prefix = 11;
    boolean hasInternationalPrefix();
    String getInternationalPrefix();
    
    // optional string preferred_international_prefix = 17;
    boolean hasPreferredInternationalPrefix();
    String getPreferredInternationalPrefix();
    
    // optional string national_prefix = 12;
    boolean hasNationalPrefix();
    String getNationalPrefix();
    
    // optional string preferred_extn_prefix = 13;
    boolean hasPreferredExtnPrefix();
    String getPreferredExtnPrefix();
    
    // optional string national_prefix_for_parsing = 15;
    boolean hasNationalPrefixForParsing();
    String getNationalPrefixForParsing();
    
    // optional string national_prefix_transform_rule = 16;
    boolean hasNationalPrefixTransformRule();
    String getNationalPrefixTransformRule();
    
    // optional bool same_mobile_and_fixed_line_pattern = 18 [default = false];
    boolean hasSameMobileAndFixedLinePattern();
    boolean getSameMobileAndFixedLinePattern();
    
    // repeated .i18n.phonenumbers.NumberFormat number_format = 19;
    java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> 
        getNumberFormatList();
    com.google.i18n.phonenumbers.Phonemetadata.NumberFormat getNumberFormat(int index);
    int getNumberFormatCount();
    
    // repeated .i18n.phonenumbers.NumberFormat intl_number_format = 20;
    java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> 
        getIntlNumberFormatList();
    com.google.i18n.phonenumbers.Phonemetadata.NumberFormat getIntlNumberFormat(int index);
    int getIntlNumberFormatCount();
    
    // optional bool main_country_for_code = 22 [default = false];
    boolean hasMainCountryForCode();
    boolean getMainCountryForCode();
    
    // optional string leading_digits = 23;
    boolean hasLeadingDigits();
    String getLeadingDigits();
    
    // optional bool leading_zero_possible = 26 [default = false];
    boolean hasLeadingZeroPossible();
    boolean getLeadingZeroPossible();
    
    // optional bool mobile_number_portable_region = 32 [default = false];
    boolean hasMobileNumberPortableRegion();
    boolean getMobileNumberPortableRegion();
  }
  public static final class PhoneMetadata extends
      com.google.protobuf.GeneratedMessageLite
      implements PhoneMetadataOrBuilder {
    // Use PhoneMetadata.newBuilder() to construct.
    private PhoneMetadata(Builder builder) {
      super(builder);
    }
    private PhoneMetadata(boolean noInit) {}
    
    private static final PhoneMetadata defaultInstance;
    public static PhoneMetadata getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhoneMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional .i18n.phonenumbers.PhoneNumberDesc general_desc = 1;
    public static final int GENERAL_DESC_FIELD_NUMBER = 1;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc generalDesc_;
    public boolean hasGeneralDesc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getGeneralDesc() {
      return generalDesc_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc fixed_line = 2;
    public static final int FIXED_LINE_FIELD_NUMBER = 2;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc fixedLine_;
    public boolean hasFixedLine() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getFixedLine() {
      return fixedLine_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc mobile = 3;
    public static final int MOBILE_FIELD_NUMBER = 3;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc mobile_;
    public boolean hasMobile() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getMobile() {
      return mobile_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc toll_free = 4;
    public static final int TOLL_FREE_FIELD_NUMBER = 4;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc tollFree_;
    public boolean hasTollFree() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getTollFree() {
      return tollFree_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc premium_rate = 5;
    public static final int PREMIUM_RATE_FIELD_NUMBER = 5;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc premiumRate_;
    public boolean hasPremiumRate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPremiumRate() {
      return premiumRate_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc shared_cost = 6;
    public static final int SHARED_COST_FIELD_NUMBER = 6;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc sharedCost_;
    public boolean hasSharedCost() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getSharedCost() {
      return sharedCost_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc personal_number = 7;
    public static final int PERSONAL_NUMBER_FIELD_NUMBER = 7;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc personalNumber_;
    public boolean hasPersonalNumber() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPersonalNumber() {
      return personalNumber_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc voip = 8;
    public static final int VOIP_FIELD_NUMBER = 8;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc voip_;
    public boolean hasVoip() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getVoip() {
      return voip_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc pager = 21;
    public static final int PAGER_FIELD_NUMBER = 21;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc pager_;
    public boolean hasPager() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPager() {
      return pager_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc uan = 25;
    public static final int UAN_FIELD_NUMBER = 25;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc uan_;
    public boolean hasUan() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getUan() {
      return uan_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc emergency = 27;
    public static final int EMERGENCY_FIELD_NUMBER = 27;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc emergency_;
    public boolean hasEmergency() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getEmergency() {
      return emergency_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc voicemail = 28;
    public static final int VOICEMAIL_FIELD_NUMBER = 28;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc voicemail_;
    public boolean hasVoicemail() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getVoicemail() {
      return voicemail_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc short_code = 29;
    public static final int SHORT_CODE_FIELD_NUMBER = 29;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc shortCode_;
    public boolean hasShortCode() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getShortCode() {
      return shortCode_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc standard_rate = 30;
    public static final int STANDARD_RATE_FIELD_NUMBER = 30;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc standardRate_;
    public boolean hasStandardRate() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getStandardRate() {
      return standardRate_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc carrier_specific = 31;
    public static final int CARRIER_SPECIFIC_FIELD_NUMBER = 31;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc carrierSpecific_;
    public boolean hasCarrierSpecific() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getCarrierSpecific() {
      return carrierSpecific_;
    }
    
    // optional .i18n.phonenumbers.PhoneNumberDesc no_international_dialling = 24;
    public static final int NO_INTERNATIONAL_DIALLING_FIELD_NUMBER = 24;
    private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc noInternationalDialling_;
    public boolean hasNoInternationalDialling() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getNoInternationalDialling() {
      return noInternationalDialling_;
    }
    
    // required string id = 9;
    public static final int ID_FIELD_NUMBER = 9;
    private java.lang.Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 country_code = 10;
    public static final int COUNTRY_CODE_FIELD_NUMBER = 10;
    private int countryCode_;
    public boolean hasCountryCode() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getCountryCode() {
      return countryCode_;
    }
    
    // optional string international_prefix = 11;
    public static final int INTERNATIONAL_PREFIX_FIELD_NUMBER = 11;
    private java.lang.Object internationalPrefix_;
    public boolean hasInternationalPrefix() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public String getInternationalPrefix() {
      java.lang.Object ref = internationalPrefix_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          internationalPrefix_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInternationalPrefixBytes() {
      java.lang.Object ref = internationalPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        internationalPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string preferred_international_prefix = 17;
    public static final int PREFERRED_INTERNATIONAL_PREFIX_FIELD_NUMBER = 17;
    private java.lang.Object preferredInternationalPrefix_;
    public boolean hasPreferredInternationalPrefix() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public String getPreferredInternationalPrefix() {
      java.lang.Object ref = preferredInternationalPrefix_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          preferredInternationalPrefix_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPreferredInternationalPrefixBytes() {
      java.lang.Object ref = preferredInternationalPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        preferredInternationalPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string national_prefix = 12;
    public static final int NATIONAL_PREFIX_FIELD_NUMBER = 12;
    private java.lang.Object nationalPrefix_;
    public boolean hasNationalPrefix() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public String getNationalPrefix() {
      java.lang.Object ref = nationalPrefix_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nationalPrefix_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNationalPrefixBytes() {
      java.lang.Object ref = nationalPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nationalPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string preferred_extn_prefix = 13;
    public static final int PREFERRED_EXTN_PREFIX_FIELD_NUMBER = 13;
    private java.lang.Object preferredExtnPrefix_;
    public boolean hasPreferredExtnPrefix() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public String getPreferredExtnPrefix() {
      java.lang.Object ref = preferredExtnPrefix_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          preferredExtnPrefix_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPreferredExtnPrefixBytes() {
      java.lang.Object ref = preferredExtnPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        preferredExtnPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string national_prefix_for_parsing = 15;
    public static final int NATIONAL_PREFIX_FOR_PARSING_FIELD_NUMBER = 15;
    private java.lang.Object nationalPrefixForParsing_;
    public boolean hasNationalPrefixForParsing() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public String getNationalPrefixForParsing() {
      java.lang.Object ref = nationalPrefixForParsing_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nationalPrefixForParsing_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNationalPrefixForParsingBytes() {
      java.lang.Object ref = nationalPrefixForParsing_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nationalPrefixForParsing_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string national_prefix_transform_rule = 16;
    public static final int NATIONAL_PREFIX_TRANSFORM_RULE_FIELD_NUMBER = 16;
    private java.lang.Object nationalPrefixTransformRule_;
    public boolean hasNationalPrefixTransformRule() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public String getNationalPrefixTransformRule() {
      java.lang.Object ref = nationalPrefixTransformRule_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nationalPrefixTransformRule_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNationalPrefixTransformRuleBytes() {
      java.lang.Object ref = nationalPrefixTransformRule_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nationalPrefixTransformRule_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool same_mobile_and_fixed_line_pattern = 18 [default = false];
    public static final int SAME_MOBILE_AND_FIXED_LINE_PATTERN_FIELD_NUMBER = 18;
    private boolean sameMobileAndFixedLinePattern_;
    public boolean hasSameMobileAndFixedLinePattern() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public boolean getSameMobileAndFixedLinePattern() {
      return sameMobileAndFixedLinePattern_;
    }
    
    // repeated .i18n.phonenumbers.NumberFormat number_format = 19;
    public static final int NUMBER_FORMAT_FIELD_NUMBER = 19;
    private java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> numberFormat_;
    public java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> getNumberFormatList() {
      return numberFormat_;
    }
    public java.util.List<? extends com.google.i18n.phonenumbers.Phonemetadata.NumberFormatOrBuilder> 
        getNumberFormatOrBuilderList() {
      return numberFormat_;
    }
    public int getNumberFormatCount() {
      return numberFormat_.size();
    }
    public com.google.i18n.phonenumbers.Phonemetadata.NumberFormat getNumberFormat(int index) {
      return numberFormat_.get(index);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.NumberFormatOrBuilder getNumberFormatOrBuilder(
        int index) {
      return numberFormat_.get(index);
    }
    
    // repeated .i18n.phonenumbers.NumberFormat intl_number_format = 20;
    public static final int INTL_NUMBER_FORMAT_FIELD_NUMBER = 20;
    private java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> intlNumberFormat_;
    public java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> getIntlNumberFormatList() {
      return intlNumberFormat_;
    }
    public java.util.List<? extends com.google.i18n.phonenumbers.Phonemetadata.NumberFormatOrBuilder> 
        getIntlNumberFormatOrBuilderList() {
      return intlNumberFormat_;
    }
    public int getIntlNumberFormatCount() {
      return intlNumberFormat_.size();
    }
    public com.google.i18n.phonenumbers.Phonemetadata.NumberFormat getIntlNumberFormat(int index) {
      return intlNumberFormat_.get(index);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.NumberFormatOrBuilder getIntlNumberFormatOrBuilder(
        int index) {
      return intlNumberFormat_.get(index);
    }
    
    // optional bool main_country_for_code = 22 [default = false];
    public static final int MAIN_COUNTRY_FOR_CODE_FIELD_NUMBER = 22;
    private boolean mainCountryForCode_;
    public boolean hasMainCountryForCode() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    public boolean getMainCountryForCode() {
      return mainCountryForCode_;
    }
    
    // optional string leading_digits = 23;
    public static final int LEADING_DIGITS_FIELD_NUMBER = 23;
    private java.lang.Object leadingDigits_;
    public boolean hasLeadingDigits() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    public String getLeadingDigits() {
      java.lang.Object ref = leadingDigits_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          leadingDigits_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLeadingDigitsBytes() {
      java.lang.Object ref = leadingDigits_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        leadingDigits_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool leading_zero_possible = 26 [default = false];
    public static final int LEADING_ZERO_POSSIBLE_FIELD_NUMBER = 26;
    private boolean leadingZeroPossible_;
    public boolean hasLeadingZeroPossible() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    public boolean getLeadingZeroPossible() {
      return leadingZeroPossible_;
    }
    
    // optional bool mobile_number_portable_region = 32 [default = false];
    public static final int MOBILE_NUMBER_PORTABLE_REGION_FIELD_NUMBER = 32;
    private boolean mobileNumberPortableRegion_;
    public boolean hasMobileNumberPortableRegion() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    public boolean getMobileNumberPortableRegion() {
      return mobileNumberPortableRegion_;
    }
    
    private void initFields() {
      generalDesc_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      fixedLine_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      mobile_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      tollFree_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      premiumRate_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      sharedCost_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      personalNumber_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      voip_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      pager_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      uan_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      emergency_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      voicemail_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      shortCode_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      standardRate_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      carrierSpecific_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      noInternationalDialling_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      id_ = "";
      countryCode_ = 0;
      internationalPrefix_ = "";
      preferredInternationalPrefix_ = "";
      nationalPrefix_ = "";
      preferredExtnPrefix_ = "";
      nationalPrefixForParsing_ = "";
      nationalPrefixTransformRule_ = "";
      sameMobileAndFixedLinePattern_ = false;
      numberFormat_ = java.util.Collections.emptyList();
      intlNumberFormat_ = java.util.Collections.emptyList();
      mainCountryForCode_ = false;
      leadingDigits_ = "";
      leadingZeroPossible_ = false;
      mobileNumberPortableRegion_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getNumberFormatCount(); i++) {
        if (!getNumberFormat(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getIntlNumberFormatCount(); i++) {
        if (!getIntlNumberFormat(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, generalDesc_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, fixedLine_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, mobile_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, tollFree_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, premiumRate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, sharedCost_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, personalNumber_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, voip_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(9, getIdBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(10, countryCode_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(11, getInternationalPrefixBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBytes(12, getNationalPrefixBytes());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(13, getPreferredExtnPrefixBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBytes(15, getNationalPrefixForParsingBytes());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBytes(16, getNationalPrefixTransformRuleBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(17, getPreferredInternationalPrefixBytes());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeBool(18, sameMobileAndFixedLinePattern_);
      }
      for (int i = 0; i < numberFormat_.size(); i++) {
        output.writeMessage(19, numberFormat_.get(i));
      }
      for (int i = 0; i < intlNumberFormat_.size(); i++) {
        output.writeMessage(20, intlNumberFormat_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(21, pager_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBool(22, mainCountryForCode_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBytes(23, getLeadingDigitsBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(24, noInternationalDialling_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(25, uan_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeBool(26, leadingZeroPossible_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(27, emergency_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(28, voicemail_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(29, shortCode_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(30, standardRate_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(31, carrierSpecific_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeBool(32, mobileNumberPortableRegion_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, generalDesc_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fixedLine_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, mobile_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, tollFree_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, premiumRate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, sharedCost_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, personalNumber_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, voip_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getIdBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, countryCode_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getInternationalPrefixBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getNationalPrefixBytes());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getPreferredExtnPrefixBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getNationalPrefixForParsingBytes());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getNationalPrefixTransformRuleBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getPreferredInternationalPrefixBytes());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, sameMobileAndFixedLinePattern_);
      }
      for (int i = 0; i < numberFormat_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, numberFormat_.get(i));
      }
      for (int i = 0; i < intlNumberFormat_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, intlNumberFormat_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, pager_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, mainCountryForCode_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(23, getLeadingDigitsBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, noInternationalDialling_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, uan_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, leadingZeroPossible_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, emergency_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, voicemail_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, shortCode_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, standardRate_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, carrierSpecific_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(32, mobileNumberPortableRegion_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata, Builder>
        implements com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataOrBuilder {
      // Construct using com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        generalDesc_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        fixedLine_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        mobile_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        tollFree_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        premiumRate_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        sharedCost_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000020);
        personalNumber_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000040);
        voip_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000080);
        pager_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000100);
        uan_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000200);
        emergency_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000400);
        voicemail_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000800);
        shortCode_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00001000);
        standardRate_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00002000);
        carrierSpecific_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00004000);
        noInternationalDialling_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00008000);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        countryCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        internationalPrefix_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        preferredInternationalPrefix_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        nationalPrefix_ = "";
        bitField0_ = (bitField0_ & ~0x00100000);
        preferredExtnPrefix_ = "";
        bitField0_ = (bitField0_ & ~0x00200000);
        nationalPrefixForParsing_ = "";
        bitField0_ = (bitField0_ & ~0x00400000);
        nationalPrefixTransformRule_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        sameMobileAndFixedLinePattern_ = false;
        bitField0_ = (bitField0_ & ~0x01000000);
        numberFormat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        intlNumberFormat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x04000000);
        mainCountryForCode_ = false;
        bitField0_ = (bitField0_ & ~0x08000000);
        leadingDigits_ = "";
        bitField0_ = (bitField0_ & ~0x10000000);
        leadingZeroPossible_ = false;
        bitField0_ = (bitField0_ & ~0x20000000);
        mobileNumberPortableRegion_ = false;
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata getDefaultInstanceForType() {
        return com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata.getDefaultInstance();
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata build() {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata buildPartial() {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata result = new com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.generalDesc_ = generalDesc_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fixedLine_ = fixedLine_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mobile_ = mobile_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tollFree_ = tollFree_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.premiumRate_ = premiumRate_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sharedCost_ = sharedCost_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.personalNumber_ = personalNumber_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.voip_ = voip_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pager_ = pager_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.uan_ = uan_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.emergency_ = emergency_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.voicemail_ = voicemail_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.shortCode_ = shortCode_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.standardRate_ = standardRate_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.carrierSpecific_ = carrierSpecific_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.noInternationalDialling_ = noInternationalDialling_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.countryCode_ = countryCode_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.internationalPrefix_ = internationalPrefix_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.preferredInternationalPrefix_ = preferredInternationalPrefix_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.nationalPrefix_ = nationalPrefix_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.preferredExtnPrefix_ = preferredExtnPrefix_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.nationalPrefixForParsing_ = nationalPrefixForParsing_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.nationalPrefixTransformRule_ = nationalPrefixTransformRule_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.sameMobileAndFixedLinePattern_ = sameMobileAndFixedLinePattern_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          numberFormat_ = java.util.Collections.unmodifiableList(numberFormat_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.numberFormat_ = numberFormat_;
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          intlNumberFormat_ = java.util.Collections.unmodifiableList(intlNumberFormat_);
          bitField0_ = (bitField0_ & ~0x04000000);
        }
        result.intlNumberFormat_ = intlNumberFormat_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.mainCountryForCode_ = mainCountryForCode_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.leadingDigits_ = leadingDigits_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.leadingZeroPossible_ = leadingZeroPossible_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.mobileNumberPortableRegion_ = mobileNumberPortableRegion_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata other) {
        if (other == com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata.getDefaultInstance()) return this;
        if (other.hasGeneralDesc()) {
          mergeGeneralDesc(other.getGeneralDesc());
        }
        if (other.hasFixedLine()) {
          mergeFixedLine(other.getFixedLine());
        }
        if (other.hasMobile()) {
          mergeMobile(other.getMobile());
        }
        if (other.hasTollFree()) {
          mergeTollFree(other.getTollFree());
        }
        if (other.hasPremiumRate()) {
          mergePremiumRate(other.getPremiumRate());
        }
        if (other.hasSharedCost()) {
          mergeSharedCost(other.getSharedCost());
        }
        if (other.hasPersonalNumber()) {
          mergePersonalNumber(other.getPersonalNumber());
        }
        if (other.hasVoip()) {
          mergeVoip(other.getVoip());
        }
        if (other.hasPager()) {
          mergePager(other.getPager());
        }
        if (other.hasUan()) {
          mergeUan(other.getUan());
        }
        if (other.hasEmergency()) {
          mergeEmergency(other.getEmergency());
        }
        if (other.hasVoicemail()) {
          mergeVoicemail(other.getVoicemail());
        }
        if (other.hasShortCode()) {
          mergeShortCode(other.getShortCode());
        }
        if (other.hasStandardRate()) {
          mergeStandardRate(other.getStandardRate());
        }
        if (other.hasCarrierSpecific()) {
          mergeCarrierSpecific(other.getCarrierSpecific());
        }
        if (other.hasNoInternationalDialling()) {
          mergeNoInternationalDialling(other.getNoInternationalDialling());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCountryCode()) {
          setCountryCode(other.getCountryCode());
        }
        if (other.hasInternationalPrefix()) {
          setInternationalPrefix(other.getInternationalPrefix());
        }
        if (other.hasPreferredInternationalPrefix()) {
          setPreferredInternationalPrefix(other.getPreferredInternationalPrefix());
        }
        if (other.hasNationalPrefix()) {
          setNationalPrefix(other.getNationalPrefix());
        }
        if (other.hasPreferredExtnPrefix()) {
          setPreferredExtnPrefix(other.getPreferredExtnPrefix());
        }
        if (other.hasNationalPrefixForParsing()) {
          setNationalPrefixForParsing(other.getNationalPrefixForParsing());
        }
        if (other.hasNationalPrefixTransformRule()) {
          setNationalPrefixTransformRule(other.getNationalPrefixTransformRule());
        }
        if (other.hasSameMobileAndFixedLinePattern()) {
          setSameMobileAndFixedLinePattern(other.getSameMobileAndFixedLinePattern());
        }
        if (!other.numberFormat_.isEmpty()) {
          if (numberFormat_.isEmpty()) {
            numberFormat_ = other.numberFormat_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureNumberFormatIsMutable();
            numberFormat_.addAll(other.numberFormat_);
          }
          
        }
        if (!other.intlNumberFormat_.isEmpty()) {
          if (intlNumberFormat_.isEmpty()) {
            intlNumberFormat_ = other.intlNumberFormat_;
            bitField0_ = (bitField0_ & ~0x04000000);
          } else {
            ensureIntlNumberFormatIsMutable();
            intlNumberFormat_.addAll(other.intlNumberFormat_);
          }
          
        }
        if (other.hasMainCountryForCode()) {
          setMainCountryForCode(other.getMainCountryForCode());
        }
        if (other.hasLeadingDigits()) {
          setLeadingDigits(other.getLeadingDigits());
        }
        if (other.hasLeadingZeroPossible()) {
          setLeadingZeroPossible(other.getLeadingZeroPossible());
        }
        if (other.hasMobileNumberPortableRegion()) {
          setMobileNumberPortableRegion(other.getMobileNumberPortableRegion());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        for (int i = 0; i < getNumberFormatCount(); i++) {
          if (!getNumberFormat(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getIntlNumberFormatCount(); i++) {
          if (!getIntlNumberFormat(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasGeneralDesc()) {
                subBuilder.mergeFrom(getGeneralDesc());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGeneralDesc(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasFixedLine()) {
                subBuilder.mergeFrom(getFixedLine());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFixedLine(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasMobile()) {
                subBuilder.mergeFrom(getMobile());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMobile(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasTollFree()) {
                subBuilder.mergeFrom(getTollFree());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTollFree(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasPremiumRate()) {
                subBuilder.mergeFrom(getPremiumRate());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPremiumRate(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasSharedCost()) {
                subBuilder.mergeFrom(getSharedCost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSharedCost(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasPersonalNumber()) {
                subBuilder.mergeFrom(getPersonalNumber());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPersonalNumber(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasVoip()) {
                subBuilder.mergeFrom(getVoip());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVoip(subBuilder.buildPartial());
              break;
            }
            case 74: {
              bitField0_ |= 0x00010000;
              id_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00020000;
              countryCode_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00040000;
              internationalPrefix_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00100000;
              nationalPrefix_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00200000;
              preferredExtnPrefix_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00400000;
              nationalPrefixForParsing_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00800000;
              nationalPrefixTransformRule_ = input.readBytes();
              break;
            }
            case 138: {
              bitField0_ |= 0x00080000;
              preferredInternationalPrefix_ = input.readBytes();
              break;
            }
            case 144: {
              bitField0_ |= 0x01000000;
              sameMobileAndFixedLinePattern_ = input.readBool();
              break;
            }
            case 154: {
              com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addNumberFormat(subBuilder.buildPartial());
              break;
            }
            case 162: {
              com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIntlNumberFormat(subBuilder.buildPartial());
              break;
            }
            case 170: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasPager()) {
                subBuilder.mergeFrom(getPager());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPager(subBuilder.buildPartial());
              break;
            }
            case 176: {
              bitField0_ |= 0x08000000;
              mainCountryForCode_ = input.readBool();
              break;
            }
            case 186: {
              bitField0_ |= 0x10000000;
              leadingDigits_ = input.readBytes();
              break;
            }
            case 194: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasNoInternationalDialling()) {
                subBuilder.mergeFrom(getNoInternationalDialling());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNoInternationalDialling(subBuilder.buildPartial());
              break;
            }
            case 202: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasUan()) {
                subBuilder.mergeFrom(getUan());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUan(subBuilder.buildPartial());
              break;
            }
            case 208: {
              bitField0_ |= 0x20000000;
              leadingZeroPossible_ = input.readBool();
              break;
            }
            case 218: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasEmergency()) {
                subBuilder.mergeFrom(getEmergency());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEmergency(subBuilder.buildPartial());
              break;
            }
            case 226: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasVoicemail()) {
                subBuilder.mergeFrom(getVoicemail());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVoicemail(subBuilder.buildPartial());
              break;
            }
            case 234: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasShortCode()) {
                subBuilder.mergeFrom(getShortCode());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setShortCode(subBuilder.buildPartial());
              break;
            }
            case 242: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasStandardRate()) {
                subBuilder.mergeFrom(getStandardRate());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStandardRate(subBuilder.buildPartial());
              break;
            }
            case 250: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder();
              if (hasCarrierSpecific()) {
                subBuilder.mergeFrom(getCarrierSpecific());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCarrierSpecific(subBuilder.buildPartial());
              break;
            }
            case 256: {
              bitField0_ |= 0x40000000;
              mobileNumberPortableRegion_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .i18n.phonenumbers.PhoneNumberDesc general_desc = 1;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc generalDesc_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasGeneralDesc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getGeneralDesc() {
        return generalDesc_;
      }
      public Builder setGeneralDesc(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        generalDesc_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setGeneralDesc(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        generalDesc_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeGeneralDesc(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            generalDesc_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          generalDesc_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(generalDesc_).mergeFrom(value).buildPartial();
        } else {
          generalDesc_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearGeneralDesc() {
        generalDesc_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc fixed_line = 2;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc fixedLine_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasFixedLine() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getFixedLine() {
        return fixedLine_;
      }
      public Builder setFixedLine(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        fixedLine_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setFixedLine(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        fixedLine_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeFixedLine(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            fixedLine_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          fixedLine_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(fixedLine_).mergeFrom(value).buildPartial();
        } else {
          fixedLine_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearFixedLine() {
        fixedLine_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc mobile = 3;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc mobile_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasMobile() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getMobile() {
        return mobile_;
      }
      public Builder setMobile(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        mobile_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setMobile(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        mobile_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeMobile(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            mobile_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          mobile_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(mobile_).mergeFrom(value).buildPartial();
        } else {
          mobile_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearMobile() {
        mobile_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc toll_free = 4;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc tollFree_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasTollFree() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getTollFree() {
        return tollFree_;
      }
      public Builder setTollFree(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        tollFree_ = value;
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setTollFree(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        tollFree_ = builderForValue.build();
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeTollFree(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            tollFree_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          tollFree_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(tollFree_).mergeFrom(value).buildPartial();
        } else {
          tollFree_ = value;
        }
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearTollFree() {
        tollFree_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc premium_rate = 5;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc premiumRate_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasPremiumRate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPremiumRate() {
        return premiumRate_;
      }
      public Builder setPremiumRate(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        premiumRate_ = value;
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setPremiumRate(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        premiumRate_ = builderForValue.build();
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergePremiumRate(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            premiumRate_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          premiumRate_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(premiumRate_).mergeFrom(value).buildPartial();
        } else {
          premiumRate_ = value;
        }
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearPremiumRate() {
        premiumRate_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc shared_cost = 6;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc sharedCost_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasSharedCost() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getSharedCost() {
        return sharedCost_;
      }
      public Builder setSharedCost(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        sharedCost_ = value;
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setSharedCost(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        sharedCost_ = builderForValue.build();
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeSharedCost(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            sharedCost_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          sharedCost_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(sharedCost_).mergeFrom(value).buildPartial();
        } else {
          sharedCost_ = value;
        }
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearSharedCost() {
        sharedCost_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc personal_number = 7;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc personalNumber_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasPersonalNumber() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPersonalNumber() {
        return personalNumber_;
      }
      public Builder setPersonalNumber(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        personalNumber_ = value;
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setPersonalNumber(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        personalNumber_ = builderForValue.build();
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergePersonalNumber(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            personalNumber_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          personalNumber_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(personalNumber_).mergeFrom(value).buildPartial();
        } else {
          personalNumber_ = value;
        }
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearPersonalNumber() {
        personalNumber_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc voip = 8;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc voip_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasVoip() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getVoip() {
        return voip_;
      }
      public Builder setVoip(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        voip_ = value;
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder setVoip(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        voip_ = builderForValue.build();
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder mergeVoip(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            voip_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          voip_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(voip_).mergeFrom(value).buildPartial();
        } else {
          voip_ = value;
        }
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder clearVoip() {
        voip_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc pager = 21;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc pager_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasPager() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getPager() {
        return pager_;
      }
      public Builder setPager(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pager_ = value;
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder setPager(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        pager_ = builderForValue.build();
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder mergePager(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000100) == 0x00000100) &&
            pager_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          pager_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(pager_).mergeFrom(value).buildPartial();
        } else {
          pager_ = value;
        }
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder clearPager() {
        pager_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc uan = 25;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc uan_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasUan() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getUan() {
        return uan_;
      }
      public Builder setUan(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        uan_ = value;
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder setUan(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        uan_ = builderForValue.build();
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder mergeUan(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            uan_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          uan_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(uan_).mergeFrom(value).buildPartial();
        } else {
          uan_ = value;
        }
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder clearUan() {
        uan_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc emergency = 27;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc emergency_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasEmergency() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getEmergency() {
        return emergency_;
      }
      public Builder setEmergency(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        emergency_ = value;
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder setEmergency(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        emergency_ = builderForValue.build();
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder mergeEmergency(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000400) == 0x00000400) &&
            emergency_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          emergency_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(emergency_).mergeFrom(value).buildPartial();
        } else {
          emergency_ = value;
        }
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder clearEmergency() {
        emergency_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc voicemail = 28;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc voicemail_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasVoicemail() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getVoicemail() {
        return voicemail_;
      }
      public Builder setVoicemail(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        voicemail_ = value;
        
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder setVoicemail(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        voicemail_ = builderForValue.build();
        
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder mergeVoicemail(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00000800) == 0x00000800) &&
            voicemail_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          voicemail_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(voicemail_).mergeFrom(value).buildPartial();
        } else {
          voicemail_ = value;
        }
        
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder clearVoicemail() {
        voicemail_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc short_code = 29;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc shortCode_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasShortCode() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getShortCode() {
        return shortCode_;
      }
      public Builder setShortCode(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        shortCode_ = value;
        
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder setShortCode(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        shortCode_ = builderForValue.build();
        
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder mergeShortCode(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00001000) == 0x00001000) &&
            shortCode_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          shortCode_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(shortCode_).mergeFrom(value).buildPartial();
        } else {
          shortCode_ = value;
        }
        
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder clearShortCode() {
        shortCode_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc standard_rate = 30;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc standardRate_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasStandardRate() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getStandardRate() {
        return standardRate_;
      }
      public Builder setStandardRate(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        standardRate_ = value;
        
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder setStandardRate(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        standardRate_ = builderForValue.build();
        
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder mergeStandardRate(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00002000) == 0x00002000) &&
            standardRate_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          standardRate_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(standardRate_).mergeFrom(value).buildPartial();
        } else {
          standardRate_ = value;
        }
        
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder clearStandardRate() {
        standardRate_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc carrier_specific = 31;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc carrierSpecific_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasCarrierSpecific() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getCarrierSpecific() {
        return carrierSpecific_;
      }
      public Builder setCarrierSpecific(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        carrierSpecific_ = value;
        
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder setCarrierSpecific(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        carrierSpecific_ = builderForValue.build();
        
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder mergeCarrierSpecific(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00004000) == 0x00004000) &&
            carrierSpecific_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          carrierSpecific_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(carrierSpecific_).mergeFrom(value).buildPartial();
        } else {
          carrierSpecific_ = value;
        }
        
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder clearCarrierSpecific() {
        carrierSpecific_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      
      // optional .i18n.phonenumbers.PhoneNumberDesc no_international_dialling = 24;
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc noInternationalDialling_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
      public boolean hasNoInternationalDialling() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc getNoInternationalDialling() {
        return noInternationalDialling_;
      }
      public Builder setNoInternationalDialling(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        noInternationalDialling_ = value;
        
        bitField0_ |= 0x00008000;
        return this;
      }
      public Builder setNoInternationalDialling(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.Builder builderForValue) {
        noInternationalDialling_ = builderForValue.build();
        
        bitField0_ |= 0x00008000;
        return this;
      }
      public Builder mergeNoInternationalDialling(com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc value) {
        if (((bitField0_ & 0x00008000) == 0x00008000) &&
            noInternationalDialling_ != com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance()) {
          noInternationalDialling_ =
            com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.newBuilder(noInternationalDialling_).mergeFrom(value).buildPartial();
        } else {
          noInternationalDialling_ = value;
        }
        
        bitField0_ |= 0x00008000;
        return this;
      }
      public Builder clearNoInternationalDialling() {
        noInternationalDialling_ = com.google.i18n.phonenumbers.Phonemetadata.PhoneNumberDesc.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      // required string id = 9;
      private java.lang.Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        id_ = value;
        
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        id_ = getDefaultInstance().getId();
        
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00010000;
        id_ = value;
        
      }
      
      // optional int32 country_code = 10;
      private int countryCode_ ;
      public boolean hasCountryCode() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getCountryCode() {
        return countryCode_;
      }
      public Builder setCountryCode(int value) {
        bitField0_ |= 0x00020000;
        countryCode_ = value;
        
        return this;
      }
      public Builder clearCountryCode() {
        bitField0_ = (bitField0_ & ~0x00020000);
        countryCode_ = 0;
        
        return this;
      }
      
      // optional string international_prefix = 11;
      private java.lang.Object internationalPrefix_ = "";
      public boolean hasInternationalPrefix() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public String getInternationalPrefix() {
        java.lang.Object ref = internationalPrefix_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          internationalPrefix_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInternationalPrefix(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        internationalPrefix_ = value;
        
        return this;
      }
      public Builder clearInternationalPrefix() {
        bitField0_ = (bitField0_ & ~0x00040000);
        internationalPrefix_ = getDefaultInstance().getInternationalPrefix();
        
        return this;
      }
      void setInternationalPrefix(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00040000;
        internationalPrefix_ = value;
        
      }
      
      // optional string preferred_international_prefix = 17;
      private java.lang.Object preferredInternationalPrefix_ = "";
      public boolean hasPreferredInternationalPrefix() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public String getPreferredInternationalPrefix() {
        java.lang.Object ref = preferredInternationalPrefix_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          preferredInternationalPrefix_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPreferredInternationalPrefix(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        preferredInternationalPrefix_ = value;
        
        return this;
      }
      public Builder clearPreferredInternationalPrefix() {
        bitField0_ = (bitField0_ & ~0x00080000);
        preferredInternationalPrefix_ = getDefaultInstance().getPreferredInternationalPrefix();
        
        return this;
      }
      void setPreferredInternationalPrefix(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00080000;
        preferredInternationalPrefix_ = value;
        
      }
      
      // optional string national_prefix = 12;
      private java.lang.Object nationalPrefix_ = "";
      public boolean hasNationalPrefix() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public String getNationalPrefix() {
        java.lang.Object ref = nationalPrefix_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nationalPrefix_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNationalPrefix(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        nationalPrefix_ = value;
        
        return this;
      }
      public Builder clearNationalPrefix() {
        bitField0_ = (bitField0_ & ~0x00100000);
        nationalPrefix_ = getDefaultInstance().getNationalPrefix();
        
        return this;
      }
      void setNationalPrefix(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00100000;
        nationalPrefix_ = value;
        
      }
      
      // optional string preferred_extn_prefix = 13;
      private java.lang.Object preferredExtnPrefix_ = "";
      public boolean hasPreferredExtnPrefix() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public String getPreferredExtnPrefix() {
        java.lang.Object ref = preferredExtnPrefix_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          preferredExtnPrefix_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPreferredExtnPrefix(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        preferredExtnPrefix_ = value;
        
        return this;
      }
      public Builder clearPreferredExtnPrefix() {
        bitField0_ = (bitField0_ & ~0x00200000);
        preferredExtnPrefix_ = getDefaultInstance().getPreferredExtnPrefix();
        
        return this;
      }
      void setPreferredExtnPrefix(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00200000;
        preferredExtnPrefix_ = value;
        
      }
      
      // optional string national_prefix_for_parsing = 15;
      private java.lang.Object nationalPrefixForParsing_ = "";
      public boolean hasNationalPrefixForParsing() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public String getNationalPrefixForParsing() {
        java.lang.Object ref = nationalPrefixForParsing_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nationalPrefixForParsing_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNationalPrefixForParsing(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        nationalPrefixForParsing_ = value;
        
        return this;
      }
      public Builder clearNationalPrefixForParsing() {
        bitField0_ = (bitField0_ & ~0x00400000);
        nationalPrefixForParsing_ = getDefaultInstance().getNationalPrefixForParsing();
        
        return this;
      }
      void setNationalPrefixForParsing(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00400000;
        nationalPrefixForParsing_ = value;
        
      }
      
      // optional string national_prefix_transform_rule = 16;
      private java.lang.Object nationalPrefixTransformRule_ = "";
      public boolean hasNationalPrefixTransformRule() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public String getNationalPrefixTransformRule() {
        java.lang.Object ref = nationalPrefixTransformRule_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nationalPrefixTransformRule_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNationalPrefixTransformRule(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        nationalPrefixTransformRule_ = value;
        
        return this;
      }
      public Builder clearNationalPrefixTransformRule() {
        bitField0_ = (bitField0_ & ~0x00800000);
        nationalPrefixTransformRule_ = getDefaultInstance().getNationalPrefixTransformRule();
        
        return this;
      }
      void setNationalPrefixTransformRule(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00800000;
        nationalPrefixTransformRule_ = value;
        
      }
      
      // optional bool same_mobile_and_fixed_line_pattern = 18 [default = false];
      private boolean sameMobileAndFixedLinePattern_ ;
      public boolean hasSameMobileAndFixedLinePattern() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public boolean getSameMobileAndFixedLinePattern() {
        return sameMobileAndFixedLinePattern_;
      }
      public Builder setSameMobileAndFixedLinePattern(boolean value) {
        bitField0_ |= 0x01000000;
        sameMobileAndFixedLinePattern_ = value;
        
        return this;
      }
      public Builder clearSameMobileAndFixedLinePattern() {
        bitField0_ = (bitField0_ & ~0x01000000);
        sameMobileAndFixedLinePattern_ = false;
        
        return this;
      }
      
      // repeated .i18n.phonenumbers.NumberFormat number_format = 19;
      private java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> numberFormat_ =
        java.util.Collections.emptyList();
      private void ensureNumberFormatIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          numberFormat_ = new java.util.ArrayList<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat>(numberFormat_);
          bitField0_ |= 0x02000000;
         }
      }
      
      public java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> getNumberFormatList() {
        return java.util.Collections.unmodifiableList(numberFormat_);
      }
      public int getNumberFormatCount() {
        return numberFormat_.size();
      }
      public com.google.i18n.phonenumbers.Phonemetadata.NumberFormat getNumberFormat(int index) {
        return numberFormat_.get(index);
      }
      public Builder setNumberFormat(
          int index, com.google.i18n.phonenumbers.Phonemetadata.NumberFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNumberFormatIsMutable();
        numberFormat_.set(index, value);
        
        return this;
      }
      public Builder setNumberFormat(
          int index, com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.Builder builderForValue) {
        ensureNumberFormatIsMutable();
        numberFormat_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addNumberFormat(com.google.i18n.phonenumbers.Phonemetadata.NumberFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNumberFormatIsMutable();
        numberFormat_.add(value);
        
        return this;
      }
      public Builder addNumberFormat(
          int index, com.google.i18n.phonenumbers.Phonemetadata.NumberFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNumberFormatIsMutable();
        numberFormat_.add(index, value);
        
        return this;
      }
      public Builder addNumberFormat(
          com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.Builder builderForValue) {
        ensureNumberFormatIsMutable();
        numberFormat_.add(builderForValue.build());
        
        return this;
      }
      public Builder addNumberFormat(
          int index, com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.Builder builderForValue) {
        ensureNumberFormatIsMutable();
        numberFormat_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllNumberFormat(
          java.lang.Iterable<? extends com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> values) {
        ensureNumberFormatIsMutable();
        super.addAll(values, numberFormat_);
        
        return this;
      }
      public Builder clearNumberFormat() {
        numberFormat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        
        return this;
      }
      public Builder removeNumberFormat(int index) {
        ensureNumberFormatIsMutable();
        numberFormat_.remove(index);
        
        return this;
      }
      
      // repeated .i18n.phonenumbers.NumberFormat intl_number_format = 20;
      private java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> intlNumberFormat_ =
        java.util.Collections.emptyList();
      private void ensureIntlNumberFormatIsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          intlNumberFormat_ = new java.util.ArrayList<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat>(intlNumberFormat_);
          bitField0_ |= 0x04000000;
         }
      }
      
      public java.util.List<com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> getIntlNumberFormatList() {
        return java.util.Collections.unmodifiableList(intlNumberFormat_);
      }
      public int getIntlNumberFormatCount() {
        return intlNumberFormat_.size();
      }
      public com.google.i18n.phonenumbers.Phonemetadata.NumberFormat getIntlNumberFormat(int index) {
        return intlNumberFormat_.get(index);
      }
      public Builder setIntlNumberFormat(
          int index, com.google.i18n.phonenumbers.Phonemetadata.NumberFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntlNumberFormatIsMutable();
        intlNumberFormat_.set(index, value);
        
        return this;
      }
      public Builder setIntlNumberFormat(
          int index, com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.Builder builderForValue) {
        ensureIntlNumberFormatIsMutable();
        intlNumberFormat_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addIntlNumberFormat(com.google.i18n.phonenumbers.Phonemetadata.NumberFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntlNumberFormatIsMutable();
        intlNumberFormat_.add(value);
        
        return this;
      }
      public Builder addIntlNumberFormat(
          int index, com.google.i18n.phonenumbers.Phonemetadata.NumberFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntlNumberFormatIsMutable();
        intlNumberFormat_.add(index, value);
        
        return this;
      }
      public Builder addIntlNumberFormat(
          com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.Builder builderForValue) {
        ensureIntlNumberFormatIsMutable();
        intlNumberFormat_.add(builderForValue.build());
        
        return this;
      }
      public Builder addIntlNumberFormat(
          int index, com.google.i18n.phonenumbers.Phonemetadata.NumberFormat.Builder builderForValue) {
        ensureIntlNumberFormatIsMutable();
        intlNumberFormat_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllIntlNumberFormat(
          java.lang.Iterable<? extends com.google.i18n.phonenumbers.Phonemetadata.NumberFormat> values) {
        ensureIntlNumberFormatIsMutable();
        super.addAll(values, intlNumberFormat_);
        
        return this;
      }
      public Builder clearIntlNumberFormat() {
        intlNumberFormat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x04000000);
        
        return this;
      }
      public Builder removeIntlNumberFormat(int index) {
        ensureIntlNumberFormatIsMutable();
        intlNumberFormat_.remove(index);
        
        return this;
      }
      
      // optional bool main_country_for_code = 22 [default = false];
      private boolean mainCountryForCode_ ;
      public boolean hasMainCountryForCode() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      public boolean getMainCountryForCode() {
        return mainCountryForCode_;
      }
      public Builder setMainCountryForCode(boolean value) {
        bitField0_ |= 0x08000000;
        mainCountryForCode_ = value;
        
        return this;
      }
      public Builder clearMainCountryForCode() {
        bitField0_ = (bitField0_ & ~0x08000000);
        mainCountryForCode_ = false;
        
        return this;
      }
      
      // optional string leading_digits = 23;
      private java.lang.Object leadingDigits_ = "";
      public boolean hasLeadingDigits() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      public String getLeadingDigits() {
        java.lang.Object ref = leadingDigits_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          leadingDigits_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLeadingDigits(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x10000000;
        leadingDigits_ = value;
        
        return this;
      }
      public Builder clearLeadingDigits() {
        bitField0_ = (bitField0_ & ~0x10000000);
        leadingDigits_ = getDefaultInstance().getLeadingDigits();
        
        return this;
      }
      void setLeadingDigits(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x10000000;
        leadingDigits_ = value;
        
      }
      
      // optional bool leading_zero_possible = 26 [default = false];
      private boolean leadingZeroPossible_ ;
      public boolean hasLeadingZeroPossible() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      public boolean getLeadingZeroPossible() {
        return leadingZeroPossible_;
      }
      public Builder setLeadingZeroPossible(boolean value) {
        bitField0_ |= 0x20000000;
        leadingZeroPossible_ = value;
        
        return this;
      }
      public Builder clearLeadingZeroPossible() {
        bitField0_ = (bitField0_ & ~0x20000000);
        leadingZeroPossible_ = false;
        
        return this;
      }
      
      // optional bool mobile_number_portable_region = 32 [default = false];
      private boolean mobileNumberPortableRegion_ ;
      public boolean hasMobileNumberPortableRegion() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      public boolean getMobileNumberPortableRegion() {
        return mobileNumberPortableRegion_;
      }
      public Builder setMobileNumberPortableRegion(boolean value) {
        bitField0_ |= 0x40000000;
        mobileNumberPortableRegion_ = value;
        
        return this;
      }
      public Builder clearMobileNumberPortableRegion() {
        bitField0_ = (bitField0_ & ~0x40000000);
        mobileNumberPortableRegion_ = false;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:i18n.phonenumbers.PhoneMetadata)
    }
    
    static {
      defaultInstance = new PhoneMetadata(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:i18n.phonenumbers.PhoneMetadata)
  }
  
  public interface PhoneMetadataCollectionOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .i18n.phonenumbers.PhoneMetadata metadata = 1;
    java.util.List<com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata> 
        getMetadataList();
    com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata getMetadata(int index);
    int getMetadataCount();
  }
  public static final class PhoneMetadataCollection extends
      com.google.protobuf.GeneratedMessageLite
      implements PhoneMetadataCollectionOrBuilder {
    // Use PhoneMetadataCollection.newBuilder() to construct.
    private PhoneMetadataCollection(Builder builder) {
      super(builder);
    }
    private PhoneMetadataCollection(boolean noInit) {}
    
    private static final PhoneMetadataCollection defaultInstance;
    public static PhoneMetadataCollection getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhoneMetadataCollection getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .i18n.phonenumbers.PhoneMetadata metadata = 1;
    public static final int METADATA_FIELD_NUMBER = 1;
    private java.util.List<com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata> metadata_;
    public java.util.List<com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata> getMetadataList() {
      return metadata_;
    }
    public java.util.List<? extends com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataOrBuilder> 
        getMetadataOrBuilderList() {
      return metadata_;
    }
    public int getMetadataCount() {
      return metadata_.size();
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata getMetadata(int index) {
      return metadata_.get(index);
    }
    public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataOrBuilder getMetadataOrBuilder(
        int index) {
      return metadata_.get(index);
    }
    
    private void initFields() {
      metadata_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getMetadataCount(); i++) {
        if (!getMetadata(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < metadata_.size(); i++) {
        output.writeMessage(1, metadata_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < metadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, metadata_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection, Builder>
        implements com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollectionOrBuilder {
      // Construct using com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        metadata_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection getDefaultInstanceForType() {
        return com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection.getDefaultInstance();
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection build() {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection buildPartial() {
        com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection result = new com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          metadata_ = java.util.Collections.unmodifiableList(metadata_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.metadata_ = metadata_;
        return result;
      }
      
      public Builder mergeFrom(com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection other) {
        if (other == com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadataCollection.getDefaultInstance()) return this;
        if (!other.metadata_.isEmpty()) {
          if (metadata_.isEmpty()) {
            metadata_ = other.metadata_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMetadataIsMutable();
            metadata_.addAll(other.metadata_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getMetadataCount(); i++) {
          if (!getMetadata(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata.Builder subBuilder = com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMetadata(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .i18n.phonenumbers.PhoneMetadata metadata = 1;
      private java.util.List<com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata> metadata_ =
        java.util.Collections.emptyList();
      private void ensureMetadataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metadata_ = new java.util.ArrayList<com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata>(metadata_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata> getMetadataList() {
        return java.util.Collections.unmodifiableList(metadata_);
      }
      public int getMetadataCount() {
        return metadata_.size();
      }
      public com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata getMetadata(int index) {
        return metadata_.get(index);
      }
      public Builder setMetadata(
          int index, com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetadataIsMutable();
        metadata_.set(index, value);
        
        return this;
      }
      public Builder setMetadata(
          int index, com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata.Builder builderForValue) {
        ensureMetadataIsMutable();
        metadata_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addMetadata(com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetadataIsMutable();
        metadata_.add(value);
        
        return this;
      }
      public Builder addMetadata(
          int index, com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetadataIsMutable();
        metadata_.add(index, value);
        
        return this;
      }
      public Builder addMetadata(
          com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata.Builder builderForValue) {
        ensureMetadataIsMutable();
        metadata_.add(builderForValue.build());
        
        return this;
      }
      public Builder addMetadata(
          int index, com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata.Builder builderForValue) {
        ensureMetadataIsMutable();
        metadata_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllMetadata(
          java.lang.Iterable<? extends com.google.i18n.phonenumbers.Phonemetadata.PhoneMetadata> values) {
        ensureMetadataIsMutable();
        super.addAll(values, metadata_);
        
        return this;
      }
      public Builder clearMetadata() {
        metadata_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeMetadata(int index) {
        ensureMetadataIsMutable();
        metadata_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:i18n.phonenumbers.PhoneMetadataCollection)
    }
    
    static {
      defaultInstance = new PhoneMetadataCollection(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:i18n.phonenumbers.PhoneMetadataCollection)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
